import socket
import cv2
import numpy as np
import sys
from PIL import Image
from io import BytesIO


def create_blank(image, changedBytes):
    """Create new image(numpy array) filled with certain color in RGB"""
    # Create black blank image
    # data[0] = Height , data[1] = Width

    try:
        for i in range(2, int((len(changedBytes) - 2) / 4)):
            # Fill image with color
            image[int.from_bytes(changedBytes[i], byteorder="big", signed=True)] = tuple(
                (
                    int.from_bytes(changedBytes[(i + 1) * 4:(i + 1) * 4 + 4], byteorder='big', signed=True),
                    int.from_bytes(changedBytes[(i + 2) * 4:(i + 2) * 4 + 4], byteorder='big', signed=True),
                    int.from_bytes(changedBytes[(i + 3) * 4:(i + 3) * 4 + 4], byteorder='big', signed=True)))

    except Exception:
        cv2.imwrite("Test1.jpg", image)
        print("Exception on {i}".format(i=i))


s = socket.socket()
s.bind(('127.0.0.1', 4415))
s.listen(1)
server_socket, adress = s.accept()


def server():
    print("Connection from: " + str(adress))

    # while True:
    # command = input('Please enter a command to the victim\n')
    # server_socket.send(command.encode('utf-8'))

    data = server_socket.recv(10000000)
    data = np.asarray(bytearray(data), dtype="uint8")
    image = cv2.imdecode(data, cv2.IMREAD_COLOR)
    cv2.imshow("Test", image)
    cv2.waitKey()
    # create_blank(data)

    server_socket.close()


if __name__ == '__main__':
    server()
